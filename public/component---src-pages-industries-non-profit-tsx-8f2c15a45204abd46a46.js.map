{"version":3,"file":"component---src-pages-industries-non-profit-tsx-8f2c15a45204abd46a46.js","mappings":"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","sources":["webpack://af-bunchee/./src/components/check-list.tsx","webpack://af-bunchee/./src/components/industry-layout.tsx","webpack://af-bunchee/./src/pages/industries/non-profit.tsx"],"sourcesContent":["import { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\n\r\nexport default function CheckList({ header, list }: { header: string; list: { h?: string; t?: string }[] }) {\r\n  return (\r\n    <div className='flex flex-col'>\r\n      <h1 className='text-black text-opacity-90 my-8'>{header}</h1>\r\n      <ul>\r\n        {list.map((s) => (\r\n          <li className='mb-4 flex flex-row'>\r\n            <span className='text-green-600'>\r\n              <FontAwesomeIcon icon={faCheck} />\r\n            </span>\r\n            <div className='ml-4'>\r\n              {s.h && <span className='text-green-600'>{s.h}</span>}\r\n              {s.t && <span className='text-black text-opacity-70'>{s.h ? ` ${s.t}` : s.t}</span>}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { graphql, Link, useStaticQuery } from 'gatsby';\r\nimport React, { useContext } from 'react';\r\nimport { pageContext } from '../contexts/page-context';\r\nimport Layout from './layout';\r\n\r\nexport default function IndustriesLayout({\r\n  title,\r\n  subtitle,\r\n  url,\r\n  children,\r\n}: React.PropsWithChildren<{ title: string; subtitle: string; url: string }>) {\r\n  const data = useStaticQuery(graphql`\r\n    query IndustriesLayoutQuery {\r\n      allIndustriesThJson {\r\n        nodes {\r\n          name\r\n          link\r\n        }\r\n      }\r\n      allIndustriesEnJson {\r\n        nodes {\r\n          name\r\n          link\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const { lang } = useContext(pageContext);\r\n\r\n  const industries = lang === 'th' ? data.allIndustriesThJson.nodes : data.allIndustriesEnJson.nodes;\r\n  return (\r\n    <Layout\r\n      page='industries'\r\n      title={lang === 'th' ? `กลุ่มธุรกิจ${title}` : `${title} Industry`}\r\n      description={subtitle}\r\n      url={url}>\r\n      <div className='w-full py-8 px-6'>\r\n        <div className='mx-auto max-w-screen-xl flex flex-row'>\r\n          <div className='flex-1 flex flex-col'>\r\n            <h3 className='text-black text-opacity-90'>{lang === 'th' ? 'กลุ่มธุรกิจ' : 'Industries'}</h3>\r\n            <h1 className='text-black text-opacity-90 my-4'>{title}</h1>\r\n            <div>{children}</div>\r\n          </div>\r\n          <div className='w-80 ml-8 hidden lg:block'>\r\n            <div className='border-2 border-green-600'>\r\n              <div className='bg-green-600 text-white p-4 mb-2'>\r\n                {lang === 'th' ? 'กลุ่มธุรกิจลูกค้า' : 'Industry Sectors'}\r\n              </div>\r\n              <ul className='py-4'>\r\n                {industries.map((i) => (\r\n                  <li className='mb-4'>\r\n                    <Link to={i.link} className='text-green-600 hover:underline ml-4'>\r\n                      {i.name}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport CheckList from '../../components/check-list';\r\nimport IndustryLayout from '../../components/industry-layout';\r\nimport { pageContext } from '../../contexts/page-context';\r\n\r\nconst consultings = [\r\n  { h: 'การวางแผนจัดทำกลยุทธ์' },\r\n  { h: 'บริการให้คำปรึกษาด้านภาษี' },\r\n  { h: 'วิเคราะห์ทุน' },\r\n  { h: 'การวางแผนจัดทำสวัสดิการพนักงาน' },\r\n  { h: 'การศึกษาเปรียบเทียบ' },\r\n  { h: 'การจัดการด้านการเงิน ทุน และทรัพยากร' },\r\n  { h: 'การประเมินความเสี่ยงจากการบันทึกบัญชีผิดพลาดและการทุจริต' },\r\n  { h: 'ให้คำปรึกษาและตรววจสอบการควบคุมภายใน' },\r\n  { h: 'บริการให้คำแนะนำและการจัดการความเสี่ยง' },\r\n];\r\n\r\nconst taxes = [\r\n  { h: 'การจัดการดูแลและการรักษาสถานภาพการยกเว้นทางภาษี' },\r\n  { h: 'การจัดการประเด็นรายได้ต่าง ๆ ที่ไม่เกี่ยวข้องกับองค์กร' },\r\n];\r\n\r\nconst accountings = [\r\n  { h: 'ตรวจสอบ ตรวจทาน และรวบรวมข้อมูลงบการเงิน' },\r\n  { h: 'การตรวจสอบรายครั้ง' },\r\n  { h: 'การตรวจสอบทุน' },\r\n  { h: 'การตรวจสอบศักยภาพ' },\r\n  { h: 'จัดเตรียมแผนในการตรวจสอบ' },\r\n  { h: 'กระทบยอดบัญชีธนาคาร' },\r\n  { h: 'การจัดทำสมุดบัญชี การจัดการใบรับและการเบิกจ่าย' },\r\n  { h: 'จัดทำการตรวจสอบภายใน' },\r\n];\r\n\r\nexport default function NonProfitIndustryPage({ data }) {\r\n  return (\r\n    <pageContext.Provider value={{ lang: 'th' }}>\r\n      <IndustryLayout\r\n        title={data.industriesThJson.name}\r\n        subtitle={data.industriesThJson.description}\r\n        url={data.industriesThJson.link}>\r\n        <div className='flex flex-col'>\r\n          <div className='text-black text-opacity-70'>\r\n            นอกจากข้อจำกัดทั้งด้านเงินทุนและทรัพยากรแล้ว\r\n            เราทราบดีกว่าองค์กรที่ไม่แสวงหาผลกำไรจะต้องเผชิญกับความยุ่งยากหลายอย่างตั้งแต่ด้านการจัดทำบัญชีจนถึงความซับซ้อนทางด้านภาษีและการตรวจสอบ\r\n            เอเอฟ การบัญชี มีการจัดเตรียมแนวทางการปฏิบัติงานต่าง ๆ ที่จำเป็นต่อการดำเนินงานและการให้บริการต่อชุมชน\r\n          </div>\r\n          <CheckList header='บริการให้คำปรึกษา' list={consultings} />\r\n          <CheckList header='บริการด้านภาษี' list={taxes} />\r\n          <CheckList header='บริการด้านบัญชี' list={accountings} />\r\n        </div>\r\n      </IndustryLayout>\r\n    </pageContext.Provider>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query NonProfitIndustryThQuery {\r\n    industriesThJson(link: { eq: \"/industries/non-profit\" }) {\r\n      name\r\n      description\r\n      link\r\n    }\r\n  }\r\n`;\r\n"],"names":["CheckList","header","list","React","className","map","s","FontAwesomeIcon","icon","faCheck","h","t","IndustriesLayout","title","subtitle","url","children","data","useStaticQuery","lang","useContext","pageContext","industries","allIndustriesThJson","nodes","allIndustriesEnJson","Layout","page","description","i","Link","to","link","name","consultings","taxes","accountings","NonProfitIndustryPage","value","IndustryLayout","industriesThJson"],"sourceRoot":""}